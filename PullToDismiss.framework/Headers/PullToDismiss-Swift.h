// Generated by Apple Swift version 4.0.3 effective-3.2.3 (swiftlang-900.0.74.1 clang-900.0.39.2)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_attribute(external_source_symbol)
# define SWIFT_STRINGIFY(str) #str
# define SWIFT_MODULE_NAMESPACE_PUSH(module_name) _Pragma(SWIFT_STRINGIFY(clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in=module_name, generated_declaration))), apply_to=any(function, enum, objc_interface, objc_category, objc_protocol))))
# define SWIFT_MODULE_NAMESPACE_POP _Pragma("clang attribute pop")
#else
# define SWIFT_MODULE_NAMESPACE_PUSH(module_name)
# define SWIFT_MODULE_NAMESPACE_POP
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <objc/NSObject.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus) || __cplusplus < 201103L
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...)
# endif
#endif

#if __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if __has_attribute(objc_method_family)
# define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
#else
# define SWIFT_METHOD_FAMILY(X)
#endif
#if __has_attribute(noescape)
# define SWIFT_NOESCAPE __attribute__((noescape))
#else
# define SWIFT_NOESCAPE
#endif
#if __has_attribute(warn_unused_result)
# define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
#else
# define SWIFT_WARN_UNUSED_RESULT
#endif
#if __has_attribute(noreturn)
# define SWIFT_NORETURN __attribute__((noreturn))
#else
# define SWIFT_NORETURN
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if defined(__has_attribute) && __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR __attribute__((enum_extensibility(open)))
# else
#  define SWIFT_ENUM_ATTR
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name) enum _name : _type _name; enum SWIFT_ENUM_ATTR SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) SWIFT_ENUM(_type, _name)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if __has_feature(attribute_diagnose_if_objc)
# define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
#else
# define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
#endif
#if __has_feature(modules)
@import ObjectiveC;
@import CoreGraphics;
@import UIKit;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"

SWIFT_MODULE_NAMESPACE_PUSH("PullToDismiss")
@class UIColor;
enum BackgroundTarget : NSInteger;
@class UIView;

SWIFT_PROTOCOL("_TtP13PullToDismiss16BackgroundEffect_")
@protocol BackgroundEffect <NSObject>
@property (nonatomic, strong) UIColor * _Nullable color;
@property (nonatomic) CGFloat alpha;
@property (nonatomic, readonly) enum BackgroundTarget target;
- (UIView * _Nonnull)makeBackgroundView SWIFT_WARN_UNUSED_RESULT;
- (void)applyEffectWithView:(UIView * _Nullable)view rate:(CGFloat)rate;
@end

/// A target type to add background view
/// <ul>
///   <li>
///     targetViewController: add background view to target viewcontroller
///   </li>
///   <li>
///     presentingViewController: add background view to target viewcontrollerâ€™s presenting viewcontroller
///   </li>
/// </ul>
typedef SWIFT_ENUM(NSInteger, BackgroundTarget) {
  BackgroundTargetTargetViewController = 0,
  BackgroundTargetPresentingViewController = 1,
};


SWIFT_CLASS("_TtC13PullToDismiss10BlurEffect") SWIFT_AVAILABILITY(ios,introduced=9.0)
@interface BlurEffect : NSObject <BackgroundEffect>
@property (nonatomic, strong) UIColor * _Nullable color;
@property (nonatomic) CGFloat alpha;
@property (nonatomic) CGFloat blurRadius;
@property (nonatomic) CGFloat saturationDeltaFactor;
@property (nonatomic) enum BackgroundTarget target;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) BlurEffect * _Nonnull defaultBlur;)
+ (BlurEffect * _Nonnull)defaultBlur SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) BlurEffect * _Nonnull extraLightBlurEffect;)
+ (BlurEffect * _Nonnull)extraLightBlurEffect SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) BlurEffect * _Nonnull lightBlurEffect;)
+ (BlurEffect * _Nonnull)lightBlurEffect SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) BlurEffect * _Nonnull darkBlurEffect;)
+ (BlurEffect * _Nonnull)darkBlurEffect SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithColor:(UIColor * _Nullable)color alpha:(CGFloat)alpha blurRadius:(CGFloat)blurRadius saturationDeltaFactor:(CGFloat)saturationDeltaFactor OBJC_DESIGNATED_INITIALIZER;
+ (BlurEffect * _Nonnull)blurEffectWithColor:(UIColor * _Nullable)color alpha:(CGFloat)alpha blurRadius:(CGFloat)blurRadius saturationDeltaFactor:(CGFloat)saturationDeltaFactor SWIFT_WARN_UNUSED_RESULT SWIFT_UNAVAILABLE;
- (UIView * _Nonnull)makeBackgroundView SWIFT_WARN_UNUSED_RESULT;
- (void)applyEffectWithView:(UIView * _Nullable)view rate:(CGFloat)rate;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end


SWIFT_CLASS("_TtC13PullToDismiss10EdgeShadow")
@interface EdgeShadow : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) EdgeShadow * _Nonnull defaultEdgeShadow;)
+ (EdgeShadow * _Nonnull)defaultEdgeShadow SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly) float opacity;
@property (nonatomic, readonly) CGFloat radius;
@property (nonatomic, readonly, strong) UIColor * _Nonnull color;
@property (nonatomic, readonly) CGSize offset;
- (nonnull instancetype)initWithOpacity:(float)opacity radius:(CGFloat)radius color:(UIColor * _Nonnull)color offset:(CGSize)offset OBJC_DESIGNATED_INITIALIZER;
+ (EdgeShadow * _Nonnull)edgeShadowWithOpacity:(float)opacity radius:(CGFloat)radius color:(UIColor * _Nonnull)color offset:(CGSize)offset SWIFT_WARN_UNUSED_RESULT SWIFT_UNAVAILABLE;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end

@protocol UIScrollViewDelegate;
@class UIScrollView;
@class UIViewController;

SWIFT_CLASS("_TtC13PullToDismiss13PullToDismiss")
@interface PullToDismiss : NSObject
@property (nonatomic, strong) id <BackgroundEffect> _Nullable backgroundEffect;
@property (nonatomic, strong) EdgeShadow * _Nullable edgeShadow;
@property (nonatomic, copy) void (^ _Nullable dismissAction)(void);
@property (nonatomic, weak) id <UIScrollViewDelegate> _Nullable delegate;
@property (nonatomic) CGFloat dismissableHeightPercentage;
- (nullable instancetype)initWithScrollView:(UIScrollView * _Nonnull)scrollView;
- (nonnull instancetype)initWithScrollView:(UIScrollView * _Nonnull)scrollView viewController:(UIViewController * _Nonnull)viewController navigationBar:(UIView * _Nullable)navigationBar OBJC_DESIGNATED_INITIALIZER;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end


@interface PullToDismiss (SWIFT_EXTENSION(PullToDismiss)) <UICollectionViewDelegate>
@end


@interface PullToDismiss (SWIFT_EXTENSION(PullToDismiss)) <UITableViewDelegate>
@end


@interface PullToDismiss (SWIFT_EXTENSION(PullToDismiss)) <UICollectionViewDelegateFlowLayout>
@end


@interface PullToDismiss (SWIFT_EXTENSION(PullToDismiss)) <UIScrollViewDelegate>
- (void)scrollViewDidScroll:(UIScrollView * _Nonnull)scrollView;
- (void)scrollViewWillBeginDragging:(UIScrollView * _Nonnull)scrollView;
- (void)scrollViewWillEndDragging:(UIScrollView * _Nonnull)scrollView withVelocity:(CGPoint)velocity targetContentOffset:(CGPoint * _Nonnull)targetContentOffset;
@end


@interface PullToDismiss (SWIFT_EXTENSION(PullToDismiss))
@property (nonatomic, readonly, weak) id _Nullable delegateProxy;
@property (nonatomic, readonly, weak) id <UIScrollViewDelegate> _Nullable scrollViewDelegate;
@property (nonatomic, readonly, weak) id <UITableViewDelegate> _Nullable tableViewDelegate;
@property (nonatomic, readonly, weak) id <UICollectionViewDelegate> _Nullable collectionViewDelegate;
@property (nonatomic, readonly, weak) id <UICollectionViewDelegateFlowLayout> _Nullable collectionViewDelegateFlowLayout;
@end


SWIFT_CLASS("_TtC13PullToDismiss12ShadowEffect")
@interface ShadowEffect : NSObject <BackgroundEffect>
@property (nonatomic, strong) UIColor * _Nullable color;
@property (nonatomic) CGFloat alpha;
@property (nonatomic) enum BackgroundTarget target;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) ShadowEffect * _Nonnull defaultShadowEffedt;)
+ (ShadowEffect * _Nonnull)defaultShadowEffedt SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)initWithColor:(UIColor * _Nullable)color alpha:(CGFloat)alpha OBJC_DESIGNATED_INITIALIZER;
+ (ShadowEffect * _Nonnull)shadowEffectWithColor:(UIColor * _Nullable)color alpha:(CGFloat)alpha SWIFT_WARN_UNUSED_RESULT SWIFT_UNAVAILABLE;
- (UIView * _Nonnull)makeBackgroundView SWIFT_WARN_UNUSED_RESULT;
- (void)applyEffectWithView:(UIView * _Nullable)view rate:(CGFloat)rate;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
@end



SWIFT_MODULE_NAMESPACE_POP
#pragma clang diagnostic pop
